args:
- auto: PREDEFINED
  description: The old value of the field that was changed.
  name: old
  predefined:
  - Low
  - Medium
  - High
  - Critical
- auto: PREDEFINED
  description: The new value of the field that was changed.
  name: new
  predefined:
  - Low
  - Medium
  - High
  - Critical
comment: 'Changes the remediation SLA once a change in incident severity occurs.

  This is done automatically and the changes can be configured to your needs.

  This automation runs using the default Limited User role, unless you explicitly
  change the permissions.

  For more information, see the section about permissions here: https://docs.paloaltonetworks.com/cortex/cortex-xsoar/6-2/cortex-xsoar-admin/playbooks/automations.html'
commonfields:
  id: ChangeRemediationSLAOnSevChange
  version: -1
dockerimage: demisto/python:2.7.18.24066
enabled: true
fromversion: 5.0.0
name: ChangeRemediationSLAOnSevChange
runas: DBotRole
runonce: false
script: "import datetime\n\n# ##### Help #####\n# This is an example script. The script\
  \ is used to change the Remediation SLA of an incident, when the severity of the\
  \ incident changes for any reason. Please copy this script and make changes to your\
  \ liking.\n# The Configuration section is there to help you easily configure the\
  \ script with your desired SLAs.\n\n# The CRITICAL_SLA field defines the number\
  \ of minutes that you would want an incident with critical severity to have, in\
  \ its Remediation SLA field.\n# The NONCRITICAL_SLA field defines the number of\
  \ days that you would want an incident with non-critical severity to have, in its\
  \ Remediation SLA field.\n# The NONCRITICAL_SLA field can also be configured in\
  \ minutes if you want.\n\n# Note that the SLA can be set with a number that represents\
  \ minutes instead of days, like so: demisto.executeCommand(\"setIncident\",{'sla':\
  \ 30, \"slaField\":\"remediationsla\"})\n# but it can also be set with a number\
  \ that represents a complete date and time structure, like so: demisto.executeCommand(\"\
  setIncident\",{'sla': 2018-12-26T12:10:24Z, \"slaField\":\"remediationsla\"})\n\
  # To get the date+time structure, you can use timedelta, like so: newsla = now +\
  \ datetime.timedelta(days=2)\n# then, you would use this to convert it to the date+time\
  \ structure that can be passed to the SLA field: newsla = newsla.strftime('%Y-%m-%dT%H:%M:%S+00:00')\n\
  \n# Since this script is to be triggered by a change of a field, you may want to\
  \ make use of the changes to the field in your script.\n# For example, in this case,\
  \ when the severity of an incident is changed, we want to check if it is now critical,\
  \ or not. We do this by using demisto.args()['new'], to get the new value of the\
  \ severity.\n# The field changes can be obtained in the following way:\n# The name\
  \ of the triggered field is in: demisto.args()['name']\n# The field's old value\
  \ is in: demisto.args()['old']\n# The field's new value is in: demisto.args()['new']\n\
  # To print the whole argument structure, use this: demisto.results(demisto.args())\n\
  \n\n# ##### Configuration #####\nCRITICAL_SLA = 60  # In minutes\nNONCRITICAL_SLA\
  \ = 6 # In days\n\n# ##### Logic #####\nargs_sev =  demisto.args().get('new')\n\
  now = datetime.datetime.utcnow()\n\nif args_sev == 'Critical':\n    demisto.log('Severity\
  \ changed to Critical')\n    demisto.executeCommand(\"setIncident\",{'sla': CRITICAL_SLA,\
  \ \"slaField\":\"remediationsla\"})\n\nelse:\n    demisto.log('Severity changed\
  \ to Not Critical' )\n    newsla = now + datetime.timedelta(days=NONCRITICAL_SLA)\n\
  \    newsla = newsla.strftime('%Y-%m-%dT%H:%M:%S+00:00')\n    demisto.executeCommand(\"\
  setIncident\",{'sla': newsla, \"slaField\":\"remediationsla\"})\n"
scripttarget: 0
subtype: python2
tags:
- field-change-triggered
- example
tests:
- SLA Scripts - Test
type: python
